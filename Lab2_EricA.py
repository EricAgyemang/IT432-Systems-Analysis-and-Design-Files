# -*- coding: utf-8 -*-
"""Reflection1_Eric.A

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CU0K-ZjBmBU9gKK-llC679CjaZinWuja
"""

# network is the python package that helps us create directed or undirected maps
import networkx as nx

#matplotlib is used for drawing
import matplotlib.pyplot as plt

#creat a directed graph -because direction of links matters
CM=nx.DiGraph()

# adding nodes here, separated by commas
CM.add_nodes_from(['Activity diagram','Domain model class diagram', 'Association classes',
                   'Use case', 'M-to-M associations','Class','Relational Databese','Attributes'])

CM.add_edges_from([('Association classes', 'M-to-M associations')], label='is used to describe the ')
CM.add_edges_from([('Activity diagram','Use case')], label='is used to shows the ')
CM.add_edges_from([('Domain model class diagram','Relational Databese')], label='is used to show the ')
CM.add_edges_from([('Class', 'Attributes')], label='may contain one or more')
edgeLabels=nx.get_edge_attributes(CM, 'label')


#----------------------------------------------------------------------------------
#drawing the nodes and edges
plt.figure(1, figsize=(10,10))
pos=nx.circular_layout(CM)
nx.draw(CM, pos, arrows=True, node_size=18000, node_color='red', 
        with_labels=True, edge_color='green')
nx.draw_networkx_edge_labels(CM, pos,edge_labels=edgeLabels, 
                             label_pos=0.5, font_size=11)
plt.show()

"""# New Section

# New Section
"""